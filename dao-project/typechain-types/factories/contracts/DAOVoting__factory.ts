/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DAOVoting, DAOVotingInterface } from "../../contracts/DAOVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_votingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minVotingPower",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minVotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526203f4806004553480156200001857600080fd5b5060405162001c4738038062001c4783398181016040528101906200003e91906200027f565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b45760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ab9190620002d7565b60405180910390fd5b620000c5816200011660201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806005819055505050620002f4565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020c82620001df565b9050919050565b6200021e81620001ff565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b6000819050919050565b620002598162000244565b81146200026557600080fd5b50565b60008151905062000279816200024e565b92915050565b60008060408385031215620002995762000298620001da565b5b6000620002a9858286016200022d565b9250506020620002bc8582860162000268565b9150509250929050565b620002d181620001ff565b82525050565b6000602082019050620002ee6000830184620002c6565b92915050565b61194380620003046000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461016e578063b03401231461018c578063c7f758a8146101aa578063c9d27afe146101e1578063da35c664146101fd578063f2fde38b1461021b576100b4565b8063013cf08b146100b957806302a251a3146100f05780630d61b5191461010e57806336fffde01461012a57806365e481e214610148578063715018a614610164575b600080fd5b6100d360048036038101906100ce9190610d95565b610237565b6040516100e7989796959493929190610e7c565b60405180910390f35b6100f861039c565b6040516101059190610f08565b60405180910390f35b61012860048036038101906101239190610d95565b6103a2565b005b6101326104e9565b60405161013f9190610f08565b60405180910390f35b610162600480360381019061015d9190611058565b6104ef565b005b61016c6106b4565b005b6101766106c8565b6040516101839190611111565b60405180910390f35b6101946106f1565b6040516101a1919061118b565b60405180910390f35b6101c460048036038101906101bf9190610d95565b610717565b6040516101d8989796959493929190610e7c565b60405180910390f35b6101fb60048036038101906101f691906111d2565b6108a1565b005b610205610b6c565b6040516102129190610f08565b60405180910390f35b6102356004803603810190610230919061123e565b610b72565b005b60036020528060005260406000206000915090508060000154908060010180546102609061129a565b80601f016020809104026020016040519081016040528092919081815260200182805461028c9061129a565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050908060020180546102ee9061129a565b80601f016020809104026020016040519081016040528092919081815260200182805461031a9061129a565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b60045481565b6000600360008381526020019081526020016000209050806004015442116103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690611317565b60405180910390fd5b8060070160009054906101000a900460ff1615610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890611383565b60405180910390fd5b806006015481600501541161049b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610492906113ef565b60405180910390fd5b60018160070160006101000a81548160ff021916908315150217905550817f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f60405160405180910390a25050565b60055481565b600554600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161054d9190611111565b602060405180830381865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058e9190611424565b10156105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c69061149d565b60405180910390fd5b6000600260008154809291906105e4906114ec565b91905055905060006003600083815260200190815260200160002090508181600001819055508381600101908161061b91906116d6565b508281600201908161062d91906116d6565b504281600301819055506004544261064591906117a8565b816004018190555060008160070160006101000a81548160ff021916908315150217905550817f5d072faeaf3fe9518eca824577834e1efc3ff209025796dd8819b72706cd0bd585836003015484600401546040516106a6939291906117dc565b60405180910390a250505050565b6106bc610bf8565b6106c66000610c7f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606080600080600080600080600360008b815260200190815260200160002090508060000154816001018260020183600301548460040154856005015486600601548760070160009054906101000a900460ff168680546107799061129a565b80601f01602080910402602001604051908101604052809291908181526020018280546107a59061129a565b80156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505096508580546108059061129a565b80601f01602080910402602001604051908101604052809291908181526020018280546108319061129a565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b505050505095509850985098509850985098509850985050919395975091939597565b6000600360008481526020019081526020016000209050806003015442101580156108d0575080600401544211155b61090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690611866565b60405180910390fd5b8060080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561099e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610995906118d2565b60405180910390fd5b600554600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109fc9190611111565b602060405180830381865afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190611424565b1015610a7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a759061149d565b60405180910390fd5b60018160080160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508115610afd57806005016000815480929190610af3906114ec565b9190505550610b18565b806006016000815480929190610b12906114ec565b91905055505b3373ffffffffffffffffffffffffffffffffffffffff16837ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f84604051610b5f91906118f2565b60405180910390a3505050565b60025481565b610b7a610bf8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bec5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610be39190611111565b60405180910390fd5b610bf581610c7f565b50565b610c00610d43565b73ffffffffffffffffffffffffffffffffffffffff16610c1e6106c8565b73ffffffffffffffffffffffffffffffffffffffff1614610c7d57610c41610d43565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c749190611111565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d7281610d5f565b8114610d7d57600080fd5b50565b600081359050610d8f81610d69565b92915050565b600060208284031215610dab57610daa610d55565b5b6000610db984828501610d80565b91505092915050565b610dcb81610d5f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0b578082015181840152602081019050610df0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e3382610dd1565b610e3d8185610ddc565b9350610e4d818560208601610ded565b610e5681610e17565b840191505092915050565b60008115159050919050565b610e7681610e61565b82525050565b600061010082019050610e92600083018b610dc2565b8181036020830152610ea4818a610e28565b90508181036040830152610eb88189610e28565b9050610ec76060830188610dc2565b610ed46080830187610dc2565b610ee160a0830186610dc2565b610eee60c0830185610dc2565b610efb60e0830184610e6d565b9998505050505050505050565b6000602082019050610f1d6000830184610dc2565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f6582610e17565b810181811067ffffffffffffffff82111715610f8457610f83610f2d565b5b80604052505050565b6000610f97610d4b565b9050610fa38282610f5c565b919050565b600067ffffffffffffffff821115610fc357610fc2610f2d565b5b610fcc82610e17565b9050602081019050919050565b82818337600083830152505050565b6000610ffb610ff684610fa8565b610f8d565b90508281526020810184848401111561101757611016610f28565b5b611022848285610fd9565b509392505050565b600082601f83011261103f5761103e610f23565b5b813561104f848260208601610fe8565b91505092915050565b6000806040838503121561106f5761106e610d55565b5b600083013567ffffffffffffffff81111561108d5761108c610d5a565b5b6110998582860161102a565b925050602083013567ffffffffffffffff8111156110ba576110b9610d5a565b5b6110c68582860161102a565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110fb826110d0565b9050919050565b61110b816110f0565b82525050565b60006020820190506111266000830184611102565b92915050565b6000819050919050565b600061115161114c611147846110d0565b61112c565b6110d0565b9050919050565b600061116382611136565b9050919050565b600061117582611158565b9050919050565b6111858161116a565b82525050565b60006020820190506111a0600083018461117c565b92915050565b6111af81610e61565b81146111ba57600080fd5b50565b6000813590506111cc816111a6565b92915050565b600080604083850312156111e9576111e8610d55565b5b60006111f785828601610d80565b9250506020611208858286016111bd565b9150509250929050565b61121b816110f0565b811461122657600080fd5b50565b60008135905061123881611212565b92915050565b60006020828403121561125457611253610d55565b5b600061126284828501611229565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112b257607f821691505b6020821081036112c5576112c461126b565b5b50919050565b7f566f74696e6720706572696f64206e6f7420656e646564000000000000000000600082015250565b6000611301601783610ddc565b915061130c826112cb565b602082019050919050565b60006020820190508181036000830152611330816112f4565b9050919050565b7f50726f706f73616c20616c726561647920657865637574656400000000000000600082015250565b600061136d601983610ddc565b915061137882611337565b602082019050919050565b6000602082019050818103600083015261139c81611360565b9050919050565b7f50726f706f73616c20646964206e6f7420706173730000000000000000000000600082015250565b60006113d9601583610ddc565b91506113e4826113a3565b602082019050919050565b60006020820190508181036000830152611408816113cc565b9050919050565b60008151905061141e81610d69565b92915050565b60006020828403121561143a57611439610d55565b5b60006114488482850161140f565b91505092915050565b7f496e73756666696369656e7420766f74696e6720706f77657200000000000000600082015250565b6000611487601983610ddc565b915061149282611451565b602082019050919050565b600060208201905081810360008301526114b68161147a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f782610d5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611529576115286114bd565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611559565b6115a08683611559565b95508019841693508086168417925050509392505050565b60006115d36115ce6115c984610d5f565b61112c565b610d5f565b9050919050565b6000819050919050565b6115ed836115b8565b6116016115f9826115da565b848454611566565b825550505050565b600090565b611616611609565b6116218184846115e4565b505050565b5b818110156116455761163a60008261160e565b600181019050611627565b5050565b601f82111561168a5761165b81611534565b61166484611549565b81016020851015611673578190505b61168761167f85611549565b830182611626565b50505b505050565b600082821c905092915050565b60006116ad6000198460080261168f565b1980831691505092915050565b60006116c6838361169c565b9150826002028217905092915050565b6116df82610dd1565b67ffffffffffffffff8111156116f8576116f7610f2d565b5b611702825461129a565b61170d828285611649565b600060209050601f831160018114611740576000841561172e578287015190505b61173885826116ba565b8655506117a0565b601f19841661174e86611534565b60005b8281101561177657848901518255600182019150602085019450602081019050611751565b86831015611793578489015161178f601f89168261169c565b8355505b6001600288020188555050505b505050505050565b60006117b382610d5f565b91506117be83610d5f565b92508282019050808211156117d6576117d56114bd565b5b92915050565b600060608201905081810360008301526117f68186610e28565b90506118056020830185610dc2565b6118126040830184610dc2565b949350505050565b7f566f74696e6720706572696f64206e6f74206163746976650000000000000000600082015250565b6000611850601883610ddc565b915061185b8261181a565b602082019050919050565b6000602082019050818103600083015261187f81611843565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b60006118bc600d83610ddc565b91506118c782611886565b602082019050919050565b600060208201905081810360008301526118eb816118af565b9050919050565b60006020820190506119076000830184610e6d565b9291505056fea264697066735822122026793a55bf8f8a031f4f8f145e5ece06d42d7124428d9307c2f545dfdc00a6ac64736f6c63430008140033";

type DAOVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOVoting__factory extends ContractFactory {
  constructor(...args: DAOVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _votingToken: AddressLike,
    _minVotingPower: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _votingToken,
      _minVotingPower,
      overrides || {}
    );
  }
  override deploy(
    _votingToken: AddressLike,
    _minVotingPower: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _votingToken,
      _minVotingPower,
      overrides || {}
    ) as Promise<
      DAOVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAOVoting__factory {
    return super.connect(runner) as DAOVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOVotingInterface {
    return new Interface(_abi) as DAOVotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAOVoting {
    return new Contract(address, _abi, runner) as unknown as DAOVoting;
  }
}
